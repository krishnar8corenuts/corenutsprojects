{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../model/weekend.repository\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    // form: FormGroup;\n    // description:string;\n    constructor(fb, repo, dialogRef) {\n      this.fb = fb;\n      this.repo = repo;\n      this.dialogRef = dialogRef;\n      this.resetform = this.fb.group({\n        id: '',\n        oldpassword: ['', Validators.required],\n        newpassword: ['', Validators.required],\n        confirmpassword: ['', Validators.required]\n      }); // this.description = data.description;\n    }\n\n    ngOnInit() {// this.form = this.fb.group({\n      //     description: [this.description, []],\n      //     ...\n      // });\n    }\n\n    save() {\n      if (this.resetform.invalid) {\n        return;\n      }\n\n      console.log(this.resetform.value);\n      this.repo.resetpassword(this.resetform.value);\n      this.dialogRef.close();\n    }\n\n    close() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WeekendRepository), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"reset-password\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[\"mat-dialog-title\", \"\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"placeholder\", \"Old Password\", \"formControlName\", \"oldpassword\"], [\"matInput\", \"\", \"placeholder\", \"New Password\", \"formControlName\", \"newpassword\", \"ngModel\", \"\"], [\"matInput\", \"\", \"placeholder\", \"confirm Password\", \"formControlName\", \"confirmpassword\", \"ngModel\", \"\"], [\"type\", \"submit\", 1, \"mat-raised-button\", \"mat-primary\", 3, \"disabled\"], [1, \"mat-raised-button\", 3, \"click\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Reset Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\");\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\");\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-dialog-actions\")(11, \"button\", 5);\n        i0.ɵɵtext(12, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_button_click_13_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(14, \"Close\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.resetform);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"disabled\", ctx.resetform.invalid);\n      }\n    },\n    directives: [i3.MatDialogTitle, i3.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i5.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.MatDialogActions],\n    encapsulation: 2\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}