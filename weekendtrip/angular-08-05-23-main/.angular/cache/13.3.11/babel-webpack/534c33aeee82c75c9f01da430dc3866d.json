{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../model/weekend.repository\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/tabs\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/checkbox\";\nimport * as i11 from \"@angular/material/button\";\n\nfunction AuthorizationComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"email is not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password must be of length 6 \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"firstname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"lastname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthorizationComponent_mat_error_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must be of length 6\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AuthorizationComponent = /*#__PURE__*/(() => {\n  class AuthorizationComponent {\n    constructor(router, repository, formBuild) {\n      this.router = router;\n      this.repository = repository;\n      this.formBuild = formBuild;\n      this.show = true;\n      this.showSpinner = false;\n      this.invalidAdmin = false;\n      this.loginForm = this.formBuild.group({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required, Validators.minLength(7)])\n      }); //  get email(){\n      //   return this.loginForm.get('emailid')\n      //  }\n      //  get pass(){\n      //   return this.loginForm.get('pass')\n      //  }\n\n      this.registerForm = this.formBuild.group({\n        firstname: new FormControl('', [Validators.required]),\n        lastname: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required, Validators.minLength(7)])\n      });\n      this.invalidAdmin = false;\n      this.repository.showHeader = false;\n      this.repository.showFooter = false;\n    }\n\n    get firstname() {\n      return this.registerForm.get('firstname');\n    }\n\n    get lastname() {\n      return this.registerForm.get('lastname');\n    }\n\n    get email() {\n      return this.registerForm.get('email');\n    }\n\n    get password() {\n      return this.registerForm.get('password');\n    }\n\n    onLogin() {\n      console.log(this.loginForm.value);\n      this.repository.authorize(this.loginForm.value);\n      setTimeout(() => {\n        if (this.repository.show) {\n          this.router.navigateByUrl(\"/admin/main/admincity/1\"); // this.showSpinner=false\n        } else {\n          // this.showSpinner=false\n          this.invalidAdmin = true;\n        }\n      }, 1000);\n    }\n\n    onRegister() {\n      console.log(\"register\");\n      console.log(this.registerForm.value);\n\n      if (this.repository.register(this.registerForm.value)) {// this.router.navigateByUrl(\"/admin/main/admincity/1\")\n        // this.showSpinner=false\n      }\n    }\n\n    ngOnInit() {}\n\n  }\n\n  AuthorizationComponent.ɵfac = function AuthorizationComponent_Factory(t) {\n    return new (t || AuthorizationComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.WeekendRepository), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  AuthorizationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthorizationComponent,\n    selectors: [[\"admin-auth\"]],\n    decls: 52,\n    vars: 13,\n    consts: [[1, \"login-page\"], [1, \"mat-elevation-z12\"], [2, \"text-align\", \"center\"], [\"mat-stretch-tabs\", \"\", 1, \"example-stretched-tabs\"], [\"label\", \"Sign In\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"placeholder\", \"Email\", \"name\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"login-button\", 3, \"disabled\"], [\"mat-raised-button\", \"\", 1, \"login-button\"], [\"label\", \"Sign Up\"], [\"matInput\", \"\", \"placeholder\", \"First Name\", \"name\", \"firstname\", \"formControlName\", \"firstname\"], [\"matInput\", \"\", \"placeholder\", \"Last Name\", \"name\", \"lastname\", \"formControlName\", \"lastname\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"required\", \"\", \"minlength\", \"6\", \"name\", \"password\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"login-button\", 3, \"disabled\"]],\n    template: function AuthorizationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-title\", 2);\n        i0.ɵɵtext(3, \"SignIn/SignUp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-tab-group\", 3)(5, \"mat-tab\", 4)(6, \"mat-card-content\")(7, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthorizationComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(8, \"mat-form-field\");\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, AuthorizationComponent_mat_error_10_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(11, AuthorizationComponent_mat_error_11_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementStart(12, \"mat-icon\", 8);\n        i0.ɵɵtext(13, \"email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-form-field\");\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵtemplate(16, AuthorizationComponent_mat_error_16_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(17, AuthorizationComponent_mat_error_17_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementStart(18, \"mat-icon\", 8);\n        i0.ɵɵtext(19, \"lock\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"mat-checkbox\");\n        i0.ɵɵtext(21, \"Remember Me!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 10);\n        i0.ɵɵtext(23, \"Sign In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 11);\n        i0.ɵɵtext(25, \"Login with Google\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(26, \"mat-tab\", 12)(27, \"mat-card-content\")(28, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthorizationComponent_Template_form_ngSubmit_28_listener() {\n          return ctx.onRegister();\n        });\n        i0.ɵɵelementStart(29, \"mat-form-field\");\n        i0.ɵɵelement(30, \"input\", 13);\n        i0.ɵɵelementStart(31, \"mat-icon\", 8);\n        i0.ɵɵtext(32, \"perm_identity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, AuthorizationComponent_mat_error_33_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-form-field\");\n        i0.ɵɵelement(35, \"input\", 14);\n        i0.ɵɵelementStart(36, \"mat-icon\", 8);\n        i0.ɵɵtext(37, \"perm_identity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(38, AuthorizationComponent_mat_error_38_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"mat-form-field\");\n        i0.ɵɵelement(40, \"input\", 6);\n        i0.ɵɵtemplate(41, AuthorizationComponent_mat_error_41_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementStart(42, \"mat-icon\", 8);\n        i0.ɵɵtext(43, \"email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"mat-form-field\");\n        i0.ɵɵelement(45, \"input\", 15);\n        i0.ɵɵtemplate(46, AuthorizationComponent_mat_error_46_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(47, AuthorizationComponent_mat_error_47_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementStart(48, \"mat-icon\", 8);\n        i0.ɵɵtext(49, \"lock\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(50, \"button\", 16);\n        i0.ɵɵtext(51, \"Sign Up\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"email\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.errors) && (ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"minlength\"]));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.firstname == null ? null : ctx.firstname.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.lastname == null ? null : ctx.lastname.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.errors) && (ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.errors) && (ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"minlength\"]));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardTitle, i5.MatTabGroup, i5.MatTab, i4.MatCardContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i6.MatFormField, i7.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i8.NgIf, i6.MatError, i9.MatIcon, i6.MatSuffix, i10.MatCheckbox, i11.MatButton, i3.RequiredValidator, i3.MinLengthValidator],\n    styles: [\".login-page[_ngcontent-%COMP%]{top:0;margin:0;padding:0;width:100%;height:100%;display:block;background-color:#efeff5;background-position:center;background-repeat:no-repeat;background-size:cover;overflow:hidden}mat-card[_ngcontent-%COMP%]{width:50%;height:100%;margin:2% auto;border-radius:8px}mat-form-field[_ngcontent-%COMP%], mat-checkbox[_ngcontent-%COMP%]{width:90%;display:block;margin:auto}mat-card-content[_ngcontent-%COMP%]{margin-top:20px}.login-button[_ngcontent-%COMP%]{display:block;width:80%;margin:20px auto}\"]\n  });\n  return AuthorizationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}