{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst PORT = 8082;\nconst PORT1 = 9090;\nconst PROTOCOL = \"http\";\nconst PROJECT = \"tour/weekendtrip\";\nconst PROJECT1 = \"auth\";\nconst PROJECT2 = \"weekend\";\nexport let WeekendRestData = /*#__PURE__*/(() => {\n  class WeekendRestData {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/${PROJECT}/`;\n      this.baseUrlLogin = `${PROTOCOL}://${location.hostname}:${PORT1}/${PROJECT1}/`;\n      this.baseUrlLogin2 = `${PROTOCOL}://${location.hostname}:${PORT1}/${PROJECT2}/`;\n    } // * getting the all citys in the Getcitys (Ajax_call)\n\n\n    getCities() {\n      return this.http.get(this.baseUrl + \"city/getallcities\");\n    }\n\n    getTravellers() {\n      return this.http.get(this.baseUrl + \"traveller/getalltravellers\");\n    }\n\n    getPackages() {\n      return this.http.get(`${this.baseUrl}pack/getallpackages`);\n    }\n\n    getUsers() {\n      return this.http.get(`${this.baseUrlLogin}getallusers`);\n    }\n\n    getuserarray() {\n      return this.http.get(`${this.baseUrlLogin}getuserarray`);\n    } // /tour/weekendtrip\n    //saving\n\n\n    saveCity(city) {\n      return this.http.post(this.baseUrl + \"city/savecity\", city);\n    }\n\n    savePlace(place, id) {\n      return this.http.post(`${this.baseUrl}place/saveplacebypackid/${id}`, place);\n    }\n\n    savePack(pack, id) {\n      console.log(pack);\n      return this.http.post(`${this.baseUrl}pack/savepackagebycityid/${id}`, pack);\n    } // savePassenger():Observable<>\n\n\n    resetPassword(reset) {\n      return this.http.post(`${this.baseUrlLogin}changepassword`, reset);\n    } //status change\n\n\n    changeStatusOfUserAdmin(email) {\n      return this.http.delete(`${this.baseUrlLogin}changestatusofuserbyEmail/${email}`);\n    }\n\n    updateuser(register, id) {\n      return this.http.put(`${this.baseUrlLogin}updateuser/${id}`, register);\n    } // pagination():Observable<Traveller[]>{\n    // let queryParams=new HttpParams();\n    // }\n    //deleting\n\n\n    deleteCity(id) {\n      // return this.http.delete(`${this.baseUrl}city/changestatusofcity/${id}`);\n      return this.http.delete(`${this.baseUrlLogin2}changestatusofcity/${id}`);\n    }\n\n    deletePlace(id) {\n      return this.http.delete(`${this.baseUrl}deletePlace/${id}`);\n    }\n\n    deletePack(id) {\n      return this.http.delete(`${this.baseUrl}deletePack/${id}`);\n    }\n\n    deleteTraveller(id) {\n      return this.http.delete(`${this.baseUrl}deleteTraveller/${id}`);\n    }\n\n    getPdf(id) {\n      // console.log(\"datapdf\",id)\n      const headers = new HttpHeaders().set('Access-Control-Allow-Origin', '*');\n      return this.http.get(`${this.baseUrl}traveller/pdf/user/${id}`, {\n        'headers': headers,\n        responseType: 'blob'\n      });\n    }\n\n    getfullPdf() {\n      const headers = new HttpHeaders().set('Access-Control-Allow-Origin', '*');\n      return this.http.get(`${this.baseUrl}traveller/pdf/admin`, {\n        'headers': headers,\n        responseType: 'blob'\n      });\n    }\n\n    paymentstatus(id, packprice) {\n      return this.http.get(`${this.baseUrl}traveller/paymentstatus/${id}/${packprice}`);\n    } //updating\n\n\n    updateCity(id, city) {\n      return this.http.put(`${this.baseUrl}updateCity/${id}`, city);\n    }\n\n    updatePlace(id, place) {\n      return this.http.put(`${this.baseUrl}updatePlace/${id}`, place);\n    }\n\n    updatePack(id, pack) {\n      return this.http.put(`${this.baseUrl}updatePack/${id}`, pack);\n    }\n\n    register(regForm) {\n      console.log(regForm);\n      return this.http.post(`${this.baseUrlLogin}register`, regForm);\n    }\n\n    saveTraveller(traveller) {\n      console.log(traveller);\n      return this.http.post(`${this.baseUrl}traveller/savetraveller`, traveller);\n    }\n\n    login(loginForm) {\n      console.log(loginForm); // console.log(\n      //   localStorage.getItem('token')\n      // );\n      // let headers=new HttpHeaders()\n      // .set(\"Authorization\",`bearer ${localStorage.getItem('token')}`)\n      // return this.http.post(`${this.baseUrlLogin}authenticate`,loginForm,{headers});\n\n      return this.http.post(`${this.baseUrlLogin}authenticate`, loginForm);\n    } // getcoupons//\n\n\n    getCoupons() {\n      return this.http.get(this.baseUrl + \"coupon/findallcoupon\");\n    }\n\n    bookingHistory(travellerMail) {\n      return this.http.get(this.baseUrl + \"traveller/getallbooked/aravind@gmail.com\");\n    }\n\n  }\n\n  WeekendRestData.ɵfac = function WeekendRestData_Factory(t) {\n    return new (t || WeekendRestData)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  WeekendRestData.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeekendRestData,\n    factory: WeekendRestData.ɵfac\n  });\n  return WeekendRestData;\n})();","map":null,"metadata":{},"sourceType":"module"}